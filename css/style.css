body{
    margin: 0;
    overflow-x: hidden;
    -webkit-text-size-adjust: 100%;
}
.header{
    position: fixed;            /* ヘッダーの固定 */
    top: 0;
    left: 0;
    width: 100vw;
    height: 70px;             /* 縦幅140px */
    background-color: yellowgreen;
    z-index: 15;
    display: flex;
    /*opacity: 0.5;*/
}
.footer{
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: 140px;              /* 縦幅140px */
    background-color: yellowgreen;
    z-index: 10;
    /*opacity: 0.5;*/
}
.tab-case{
    width: 100vw;
    overflow-x: hidden;
    /*height: 100%;*/
    /*padding:140px 0 90px 0;    !* ヘッダとフッタの調整時に再調整が必要 *!*/
}
.tab-case .tab{
    width: 100%;
    /*height:100%*/
    position: absolute;
    left: 0;
    top: 0;
    padding:80px 0 150px 0;        /* ヘッダとフッタの調整時に再調整が必要 */
    transition-duration:0.9s;
}

.tab-case .tab:nth-of-type(1){/*自己紹介*/
    background-color: red;
    left: 0;
    top: 0;
}
.tab-case .tab:nth-of-type(2){/*趣味*/
    background-color: blue;
    left: -100%;
    top: 0;
}
.tab-case .tab:nth-of-type(3){/*リンク*/
    background-color: green;
    left: -100%;
    top: 0;
}
.tab-case .tab:nth-of-type(4){/*ブログ*/
    background-color: #e66d09;
    left: -100%;
    top: 0;
}

.tab-case .tab:last-child{/*訪問者解析(js実装の範囲)*/
    background-color: #fdff00;
    left: -100%;
    top: 0;
}

/*.menu-switch + .menu-trigger + .menuList{*/
    /*position: fixed;*/
    /*background-color: #007380;*/
    /*height: 100vh;*/
    /*width: 100vw;*/
    /*z-index: 10;*/
    /*opacity: 0.0;*/
    /*display: none;*/
/*}*/
/*.menu-switch:checked + .menu-trigger + .menuList{*/
    /*display: inherit;*/
    /*opacity: 0.5;*/
/*}*/
.title{
    /*width: 40%;*/
    flex: 1;
    padding-left: 20px;
    padding-right: -20px;
    padding-top: 10px;
}

#radioCase{
    display: flex;
    flex: 1;
    padding-top: 8px;
    /*padding-bottom: 8px;*/
    padding-left: -20px;
    padding-right: 20px;
    /*width: 60%;*/
    /*position: relative;*/
    /*left: 0;*/
}
#radioCase div{
    flex: 1;
    text-align: center;
}
.hiddenRadio{
    display: none;
}
.hiddenRadio + .radioIcon{
    position: relative;
    display: inline-block;
    background: red;
    height: 40px;
    width: 80%;
    border-radius: 10px 10px 10px 10px; /*左上,右下に40px*/
}
.hiddenRadio:checked + .radioIcon{
    background: #17bcdf;
}
.hiddenRadio:hover + .radioIcon{
    background: #007380;
}

.vector{
    width: 100%;
}
#left,#right{
    height: 50px;
    width: 40%;
    position: relative;
    background-color: black;
    display: inline-block;
}
#right{
    float: right;
}
#left{
    float: left;
}
#left:active,#right:active{
    background-color: white;
}
#left:hover,#right:hover{
    background-color: #007380;
}



.menu-trigger{
    /*width: 60px;*/
    /*height: 40px;*/
    position: absolute;
    top: 8px;
    right: 40px;
    margin:auto;
    cursor: pointer;
    /*background-color: #0095a4;*/
    text-align: center;
}
.menu-trigger span:nth-of-type(2){
    /*position: relative;*/
    /*height: 200px;*/
    /*background-color: red;*/
    /*margin-top: 10px;*/
    color: white;
    font-family: 'Century Gothic';
    font-size: 24px;
    font-weight: 600;
    /*background-color: red;*/
    /*vertical-align: center;*/
}
.menu-trigger span:nth-of-type(1),.menu-trigger span:nth-of-type(3){
    display: block;
    width: 100%;
    height: 5px;
    background: #fff;
    transition: .5s;
    border-radius: 2px;
}
.menu-trigger span:nth-of-type(1){
    /*transform:translateY(0px);*/
    margin-bottom: 5px;
}
.menu-trigger span:nth-of-type(2):before{
    /*transform: translateY(20px);*/
    content: "menu";
    transition: .5s;
    /*height: 80px;*/
}
.menu-trigger span:nth-of-type(3){
    /*transform: translateY(0px);*/
    margin-top: 8px;
}
.menu-switch:checked + .menu-trigger span:nth-of-type(1){
    transform: translateY(22px) rotate(-315deg);
}
.menu-switch:checked + .menu-trigger span:nth-of-type(3){
    transform: translateY(-28px) rotate(315deg);
}

.menu-switch:checked + .menu-trigger span:nth-of-type(2):before{
    /*content: "　";*/
    opacity: 0;
}
.menu-switch{
    display: none;
}

/*表示範囲より左側の要素に高さはないのかスクロールバーが変化する*/

/*animation-name:@keyframesで定義した名前*/
/*animation-duration:アニメーション開始から終了までの所要時間を指定するプロパティ。*/
/*animation-timing-function:アニメーションのイージングを指定するプロパティ。*/
/*animation-delay:アニメーションが開始するまでの遅延時間を指定するプロパティ。*/
/*animation-iteration-count:アニメーションのループ回数を指定するプロパティ。infiniteを指定すると無限ループする。*/
/*animation-direction:アニメーションの再生方向を指定するプロパティ。*/
/*animation-direction: reverse;*/
/*アニメーションを逆再生する。(100% → 0%)*/
/*アニメーションがループの場合、再び逆再生の始め(100%)から再生する。*/

                             /*animation-direction: alternate;*/
/*アニメーションを通常再生するが、アニメーションがループの場合*/
/*通常再生(0% → 100%) → 逆再生(100% → 0%) → 通常再生(0% → 100%) → 逆再生(100% → 0%)*/
/*といった繰り返し順で再生される。*/

/*animation-direction: alternate-reverse;*/
/*アニメーションを逆再生するが、アニメーションがループの場合*/
/*逆再生(100% → 0%) → 通常再生(0% → 100%) → 逆再生(100% → 0%) → 通常再生(0% → 100%)*/
/*といった繰り返し順で再生される。*/

/*animation-fill-mode:キーフレームアニメーションで指定したプロパティをアニメーション開始前、終了後に適用するかどうかを指定するプロパティ。*/
/*animation-fill-mode: none;*/
/*何も適用しない。*/

/*animation-fill-mode: forwards;*/
/*アニメーション終了後にキーフレームアニメーションで指定したプロパティを適用する。*/
/*そのため、アニメーションが終了しても要素はアニメーション終了時(100%)の状態のままになる。*/

/*※逆再生だったら(0%)の状態のままになる。*/

            /*animation-fill-mode: backwards;*/
/*アニメーション開始前にキーフレームアニメーションで指定したプロパティを適用する。*/
/*そのため、animation-delayで遅延時間を指定し、アニメーションが開始していなくても*/
/*要素はアニメーション開始時(0%)の状態になる。*/

/*※逆再生だったら(100%)の状態になる。*/
/*animation-fill-mode: both;*/
/*アニメーション開始前と終了後にキーフレームアニメーションで指定したプロパティを適用する。*/
/*forwardsとbackwardsの両方を適用したもの。*/

/*animation-play-state:アニメーションを再生中か一時停止にするプロパティ。*/