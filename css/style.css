body{
    margin: 0;
    overflow-x: hidden;
    -webkit-text-size-adjust: 100%;
}
.header{
    position: fixed;            /* ヘッダーの固定 */
    /*top: 0;*/
    /*left: 0;*/
    width: 100vw;
    height: 70px;             /* 縦幅140px */
    background-color: #262672;
    z-index: 15;

    display: flex;
    justify-content: center;
    align-items: center;
}
.footer{
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: 70px;              /* 縦幅140px */
    background-color: #262672;
    z-index: 10;

    display: flex;
    align-items: center;
}
.tab-case{
    width: 100vw;
    overflow-x: hidden;
}
.tab-case .tab{
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding:70px 0 80px 0;        /* ヘッダとフッタの調整時に再調整が必要 */
    transition-duration:0.9s;
    border-right: solid #868789 1px;
    margin-left: -1px;
}
.content{
    padding-left: 16px;
}
h2 span{
    font-weight: normal;
    color: #606060;
    font-size: 60%;
    vertical-align: middle;
}
h2 span:before{
    content: '　― ';
}



.tab-case .tab:nth-of-type(1){/*自己紹介*/
    background-color: #e8eaf9;
    left: 0;
    top: 0;
}
.tab-case .tab:nth-of-type(2){/*趣味*/
    background-color: #e9e9f9;
    left: -100%;
    top: 0;
}
.tab-case .tab:nth-of-type(3){/*リンク*/
    background-color: #e9e9f9;
    left: -100%;
    top: 0;
}
.tab-case .tab:nth-of-type(4){/*ブログ*/
    background-color: #e9e9f9;
    left: -100%;
    top: 0;
}

.tab-case .tab:last-child{/*訪問者解析(js実装の範囲)*/
    background-color: #e9e9f9;
    left: -100%;
    top: 0;
}


@media screen and (min-width: 500px) {
    /* 表示領域が800px以上の場合に適用するスタイル */
    .title{
        flex: 1;
        padding-left: 20px;
        padding-right: -20px;
        font-family: 'Century Gothic';
        font-size: 50px;
        color: white;
    }
}

@media screen and (max-width: 500px) {
    /* 表示領域が320px以下の場合に適用するスタイル */
    .title{
        flex: 1;
        padding-left: 20px;
        padding-right: -20px;
        font-family: 'Century Gothic';
        font-size: 5vw;
        color: white;
    }
}

#radioCase{
    display: flex;
    flex: 1;
    /*padding-bottom: 20px;*/
    padding-left: -10px;
    padding-right: 10px;
}
#radioCase div{
    flex: 1;
    text-align: center;
}
#radioCase div label{
    display: table;
    width: 80%;
    height: 100%;
}
#radioCase div label span{
    display: table-cell;
    text-align: center;
    vertical-align: middle;
}
.hiddenRadio{
    display: none;
}


@media screen and (min-width: 640px) {
    /* 表示領域が640px以上の場合に適用するスタイル */
    .hiddenRadio + .radioIcon{
        position: relative;
        display: inline-block;
        background: #f38500;
        height: 40px;
        width: 80%;
        border-radius: 10px 10px 10px 10px; /*左上,右下に40px*/
        /*font-family: 'Century Gothic';*/
        color: #FFF;
    }
    #radioCase div:nth-child(1) span::before{
        content: "Home";
    }
    #radioCase div:nth-child(2) span::before{
        content: "Profile";
    }
    #radioCase div:nth-child(3) span::before{
        content: "Link";
    }
    #radioCase div:nth-child(4) span::before{
        content: "Blog";
    }
    #radioCase div:nth-child(5) span::before{
        content: "Other";
    }
}

@media screen and (max-width: 640px) {
    /* 表示領域が640px以下の場合に適用するスタイル */
    .hiddenRadio + .radioIcon{
        position: relative;
        display: inline-block;
        background: #f38500;
        height: 40px;
        width: 80%;
        border-radius: 10px 10px 10px 10px; /*左上,右下に40px*/
        /*font-family: 'Century Gothic';*/
        /*font-size: 0;*/
        color: #FFF;
    }
    #radioCase div span::before{
        content: "　";
    }
}
.hiddenRadio:checked + .radioIcon{
    background: #fa3a2c;
}
.hiddenRadio:hover + .radioIcon{
    animation-name: buttonHover;
    animation-duration: .6s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}
@keyframes buttonHover {
    0%{
        background-color: #f3e600;
    }
    100%{
        background-color: #f38500;
    }
}

.vector{
    width: 100%;
    display: flex;
    justify-content: space-between;
}
#left,#right{
    height: 60px;
    width: 75px;
    background-color: #f38500;
    text-align: center;
    display: flex;
    justify-content: space-around;
    align-items: center;

    border-radius: 100px; /*左上,右下に40px*/


}
#right{
    margin-right: 40px;
}
#left{
    margin-left: 40px;
}
#left:active,#right:active{
    background-color: white;
}
#left:hover,#right:hover{
    background-color: #f35901;
}
.arrow{
}
.arrow:before,.arrow:after{
    content: '';
    display: block;
    width: 39px;
    height: 8px;
    background-color: white;
}
.arrow:before{
    transform: translateY(-4px) translateX(-4px) rotate(-30deg);
    border-radius: 10px 0 0 10px;
}
#left:hover .arrow:before,#left:hover .arrow:after{
    background-color: #d7d7d7;
}
.arrow:after{
    transform: translateY(4px) translateX(-4px) rotate(30deg);
    border-radius: 10px 0 0 10px;
}
#right:hover .arrow:before, #right:hover .arrow:after{
    background-color: #d7d7d7;
}

#left .arrow{
}
#right .arrow{
    transform: rotate(180deg)
}


.menu-trigger{
    position: absolute;
    top: 8px;
    right: 40px;
    margin:auto;
    cursor: pointer;
    text-align: center;
}
.menu-trigger span:nth-of-type(2){
    color: white;
    font-family: 'Century Gothic';
    font-size: 24px;
    font-weight: 600;
}
.menu-trigger span:nth-of-type(1),.menu-trigger span:nth-of-type(3){
    display: block;
    width: 100%;
    height: 5px;
    background: #fff;
    transition: .5s;
    border-radius: 2px;
}
.menu-trigger span:nth-of-type(1){
    margin-bottom: 5px;
}
.menu-trigger span:nth-of-type(2):before{
    content: "menu";
    transition: .5s;
}
.menu-trigger span:nth-of-type(3){
    margin-top: 8px;
}
.menu-switch:checked + .menu-trigger span:nth-of-type(1){
    transform: translateY(22px) rotate(-315deg);
}
.menu-switch:checked + .menu-trigger span:nth-of-type(3){
    transform: translateY(-28px) rotate(315deg);
}

.menu-switch:checked + .menu-trigger span:nth-of-type(2):before{
    opacity: 0;
}
.menu-switch{
    display: none;
}

/*表示範囲より左側の要素に高さはないのかスクロールバーが変化する*/

/*animation-name:@keyframesで定義した名前*/
/*animation-duration:アニメーション開始から終了までの所要時間を指定するプロパティ。*/
/*animation-timing-function:アニメーションのイージングを指定するプロパティ。*/
/*animation-delay:アニメーションが開始するまでの遅延時間を指定するプロパティ。*/
/*animation-iteration-count:アニメーションのループ回数を指定するプロパティ。infiniteを指定すると無限ループする。*/
/*animation-direction:アニメーションの再生方向を指定するプロパティ。*/
/*animation-direction: reverse;*/
/*アニメーションを逆再生する。(100% → 0%)*/
/*アニメーションがループの場合、再び逆再生の始め(100%)から再生する。*/

                             /*animation-direction: alternate;*/
/*アニメーションを通常再生するが、アニメーションがループの場合*/
/*通常再生(0% → 100%) → 逆再生(100% → 0%) → 通常再生(0% → 100%) → 逆再生(100% → 0%)*/
/*といった繰り返し順で再生される。*/

/*animation-direction: alternate-reverse;*/
/*アニメーションを逆再生するが、アニメーションがループの場合*/
/*逆再生(100% → 0%) → 通常再生(0% → 100%) → 逆再生(100% → 0%) → 通常再生(0% → 100%)*/
/*といった繰り返し順で再生される。*/

/*animation-fill-mode:キーフレームアニメーションで指定したプロパティをアニメーション開始前、終了後に適用するかどうかを指定するプロパティ。*/
/*animation-fill-mode: none;*/
/*何も適用しない。*/

/*animation-fill-mode: forwards;*/
/*アニメーション終了後にキーフレームアニメーションで指定したプロパティを適用する。*/
/*そのため、アニメーションが終了しても要素はアニメーション終了時(100%)の状態のままになる。*/

/*※逆再生だったら(0%)の状態のままになる。*/

            /*animation-fill-mode: backwards;*/
/*アニメーション開始前にキーフレームアニメーションで指定したプロパティを適用する。*/
/*そのため、animation-delayで遅延時間を指定し、アニメーションが開始していなくても*/
/*要素はアニメーション開始時(0%)の状態になる。*/

/*※逆再生だったら(100%)の状態になる。*/
/*animation-fill-mode: both;*/
/*アニメーション開始前と終了後にキーフレームアニメーションで指定したプロパティを適用する。*/
/*forwardsとbackwardsの両方を適用したもの。*/

/*animation-play-state:アニメーションを再生中か一時停止にするプロパティ。*/


/*Flex めちゃクソ便利。これで統一して中心ぞろえと化するほうが絶対いい
    毎回調べてでもflexで実装しろ
*/